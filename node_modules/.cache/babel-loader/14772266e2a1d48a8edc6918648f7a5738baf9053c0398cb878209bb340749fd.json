{"ast":null,"code":"var _jsxFileName = \"/Users/dik1m/Documents/React/react-final-project-v1/src/Home.js\",\n  _s = $RefreshSig$();\n// TODO: answer here\n\nimport { Container, Heading, Select, SimpleGrid } from \"@chakra-ui/react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // TODO: answer here\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fecthCards = useCallback(async () => {\n    const url = \"https://db.ygoprodeck.com/api/v7/cardinfo.php?banlist=tcg&level=4\";\n    const response = await fetch(url);\n    const data = await response.json();\n    setCards(data === null || data === void 0 ? void 0 : data.data);\n    setLoading(false);\n  }, []);\n  const compareStringForSort = (a, b) => {\n    return a.name < b.name ? -1 : a.name > b.name ? 1 : 0;\n  };\n  function sortData(type) {\n    // TODO: answer here\n    let cards_temp = [];\n    if (type === 'Name') {\n      cards_temp = cards.sort(compareStringForSort);\n      setCards([...cards_temp]);\n    } else if (type === 'Attack') {\n      cards_temp = cards.sort((a, b) => a.atk - b.atk);\n      setCards([...cards_temp]);\n    } else if (type === 'Defence') {\n      cards_temp = cards.sort((a, b) => a.def - b.def);\n      setCards([...cards_temp]);\n    }\n  }\n  useEffect(() => {\n    fecthCards();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.sm\",\n    centerContent: true,\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      name: \"sort\",\n      my: 10,\n      onChange: e => sortData(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Name\",\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Attack\",\n        children: \"attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Defence\",\n        children: \"defence\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Heading, {\n      as: \"h1\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      columns: 4,\n      spacing: 10,\n      children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(Cards, {\n        card: card\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this); // TODO: replace this\n}\n_s(Home, \"HesnmWBhrSmZxZk2IMI2wQyXQlw=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Container","Heading","Select","SimpleGrid","useCallback","useEffect","useState","Cards","Home","cards","setCards","loading","setLoading","fecthCards","url","response","fetch","data","json","compareStringForSort","a","b","name","sortData","type","cards_temp","sort","atk","def","e","target","value","map","card","index"],"sources":["/Users/dik1m/Documents/React/react-final-project-v1/src/Home.js"],"sourcesContent":["// TODO: answer here\n\nimport { Container, Heading, Select, SimpleGrid } from \"@chakra-ui/react\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport Cards from './Cards';\n\nfunction Home() {\n  // TODO: answer here\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const fecthCards = useCallback( async() => {\n    const url = \"https://db.ygoprodeck.com/api/v7/cardinfo.php?banlist=tcg&level=4\";\n\n    const response = await fetch(url);\n    const data = await response.json();\n    setCards(data?.data);\n    setLoading(false);\n  }, []);\n\n  const compareStringForSort = (a, b)  => {\n    return a.name < b.name ? -1  : a.name > b.name ? 1 : 0;\n  }\n  function sortData(type) {\n    // TODO: answer here\n    let cards_temp = [];\n    if(type === 'Name'){\n      cards_temp = cards.sort(compareStringForSort);\n      setCards([...cards_temp]);\n    }else if(type === 'Attack'){\n      cards_temp = cards.sort((a,b) => a.atk - b.atk);\n      setCards([...cards_temp]);\n    }else if(type === 'Defence'){\n      cards_temp = cards.sort((a,b) => a.def - b.def);\n      setCards([...cards_temp]);\n    }\n  }\n\n\n  useEffect(() => {\n    fecthCards();\n  }, [])\n  return (\n    <Container maxW='container.sm' centerContent>\n      <Select name=\"sort\" my={10} onChange={(e) => sortData(e.target.value)}>\n        <option value='Name'>name</option>\n        <option value='Attack'>attack</option>\n        <option value='Defence'>defence</option>\n      </Select>\n      {loading ? (\n      <Heading as=\"h1\">Loading...</Heading>\n      ) : (\n        <SimpleGrid columns={4} spacing={10}>\n          {cards.map((card, index) => (\n            <Cards card={card} key={index} />\n          ))}\n        </SimpleGrid>\n      )}\n    </Container>\n  ) // TODO: replace this\n}\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}